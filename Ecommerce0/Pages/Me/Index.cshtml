@page
@model Ecommerce0.Pages.Me.IndexModel
@{
}
@*Có 2 cách style: 1 là thêm vô site.css trong wwwroot 2 là thêm code css vô section CSS(dùng link hoặc style): Dùng cách 2 vì cách 1 file đã quá nhiều*@
@section CSS {
    <link href="~/css/my.css" rel="stylesheet" />
}
<partial name="~/Pages/Shared/_IndexHeader.cshtml"/>
<div class="row">
    <div class="col-2" style="margin-top:60px;">
        @*file my.css khong load do bootstrap dc
        khi lam 3 col layout nen phai dung thuoc tinh bootstrap*@
        <h4>Categories</h4>
        @*Tag helper này giúp tạo id là SelectedCategoryId và load các option có value 
        la Categories(là List<SelectListItem>)*@
        <select asp-for="@Model.SelectedCategoryId" asp-items="Model.Categories" >
            <option value="" disabled selected hidden>Select Category</option>
        </select>
        <br />
        <br />
        <h4>Tags of this category:</h4>
        <div id="tagsOfCate">
        </div>
    </div>
    <div class="col-7">
        <h1>Book List:</h1>
        <hr />
        <br>
        <br>
        <br>

        <div id="dynamic" class="row gx-4 gx-lg-5 row-cols-2 row-cols-md-3 row-cols-xl-3 justify-content-center">
            @foreach (var book in Model.Books)
            {
                <div class="col mb-5">
                    <div class="card h-100 shadow rounded">
                        <!-- Product image-->

                        <img class="card-img-top" src=@book.Image alt="..." style="height: 200px;width:auto;" />
                        <!-- Product details-->
                        <div class="card-body p-4">
                            <div class="text-center">
                                <!-- Product name-->
                                <a href="/detail/?id=@book.Id" style="text-decoration:none; font-family:'Franklin Gothic Medium', 'Arial Narrow', Arial, sans-serif"><h5 class="fw-bolder">@book.Title</h5></a>
                                @if (book.Category != null)
                                {
                                    <div class="container">
                                        <span class="h6 font-weight-bold">Cate: </span>
                                        <a href="/cat/listbycate/?cateId=@book.Category.Id" class="text-decoration-none btn btn-sm btn-outline-warning">@book.Category.Name</a>
                                    </div>

                                }
                                <!-- Product price-->
                                <span class="text-success">$@book.Price</span>
                            </div>
                        </div>
                        <!-- Product actions-->
                        <div class="card-footer p-4 pt-0 border-top-0 bg-transparent">
                            <div class="col-12 justify-content-center align-items-center text-center">
                                <a asp-page="/shop/cart" asp-page-handler="BuyNow" asp-route-id="@book.Id" class="btn btn-outline-primary">
                                    Add To <i class="fas fa-cart-plus"></i>
                                </a>
                            </div>
                        </div>
                    </div>
                </div>
            }
        </div>

        @*Pagination*@
        <div class="myPagination">
            @{
                int pageSize = 3;
                int pageCount = Model.Books.Count / pageSize;
                <a id="FirstPage" class="myPage">First</a>
                <a id="PrevPage" class="myPage">Prev</a>
                for (int i = 1; i <= pageCount; i++)
                {
                    <a class="myPage">@(i)</a>
                }
                <a id="NextPage" class="myPage">Next</a>
                <a id="LastPage" class="myPage">Last</a>
            }
        </div>
    </div>
    <div class="col-3">
        <div class="card myCard">
            <div class="card-header bg-danger text-white font-monospace myCardHeader">Top 10 Newest Products</div>
            <div class="myCardBody">
                @foreach(var newBook in Model.Top10NewestBooks)
                {
                    <a class="myNewBook" href="/detail/?id=@newBook.Id">
                        <img src="@newBook.Image" alt="Alternate Text" style=""/>
                        <div class="myContentContainer">
                            <p class="myBookTitle">@newBook.Title</p>
                            @{
                                var x = DateTime.Now - newBook.ModifiedDate;
                                if (x < new TimeSpan(1, 0, 0, 0))
                                {
                                    <img class="myNewLabel" src="https://vnsea.com.vn/wp-content/uploads/2017/12/new.png"/>
                                }
                            }

                        </div>
                    </a>
                }
            </div>
        </div>
    </div>
</div>


@section Scripts {
    @*AJAX Request*@
<script>
        refreshCSS = () => {
            let links = document.getElementsByTagName('link');
            for (let i = 0; i < links.length; i++) {
                if (links[i].getAttribute('rel') == 'stylesheet') {
                    let href = links[i].getAttribute('href')
                        .split('?')[0];

                    let newHref = href + '?version='
                        + new Date().getMilliseconds();

                    links[i].setAttribute('href', newHref);
                }
            }
        }

        let currPage = -1;
        let dynamicElement = document.getElementById("dynamic");
        var pages = document.getElementsByClassName("myPage");
        for (let j = 0; j < pages.length; j++) {
            pages[j].addEventListener('click', function () {
                //refresh all page from .active class
                for (let x = 0; x < pages.length; x++) {
                    pages[x].classList.remove("active");
                }

                let xhttp = new XMLHttpRequest();
                if (pages[j].id == "FirstPage") { currPage = 1; pages[2].classList.add("active"); }
                else if (pages[j].id == "LastPage") { currPage = @pageCount; pages[pages.length - 3].classList.add("active"); }
                else if (pages[j].id == "PrevPage" && currPage > 1) { currPage = currPage - 1; pages[currPage + 1].classList.add("active"); }
                else if (pages[j].id == "PrevPage" && currPage == 1) { currPage = currPage; pages[2].classList.add("active"); }
                else if (pages[j].id == "NextPage" && currPage < @pageCount && currPage >= 1) { currPage = currPage + 1; pages[currPage + 1].classList.add("active"); }
                else if (pages[j].id == "NextPage" && currPage == @pageCount) { currPage = currPage; pages[pages.length - 3].classList.add("active"); }
                else if (pages[j].id == "") {
                    currPage = parseInt(pages[j].innerHTML);
                    pages[j].classList.add("active");
                }
                refreshCSS();
                console.log(currPage);


                xhttp.open("get", "/me/index/?pSize=@pageSize&pNum=" + currPage + "&handler=Pagination");

                xhttp.onload = function () {
                    let data = JSON.parse(xhttp.responseText);
                    renderHTMLProducts(data);
                };

                xhttp.send();
            });
        }

    //đây là cách duy nhất để hiển thị dữ liệu lên trang = AJAX  +
    //DOM JSOM vì ko thể đưa code razor c# vào trong javascript
    function renderHTMLProducts(data) {
        let htmlString = "";
        for (var i = 0; i < data.length; i++) {
            let book = data[i];
            htmlString += '<div class="col mb-5"><div class="card h-100 shadow rounded"><img class="card-img-top" src="'
                + book.image + '"style="height: 200px;width:auto;"/>';
            htmlString += '<div class="card-body p-4"><div class="text-center"><a href="/detail/?id=' + book.id + 'style="text-decoration:none; font-family:"Franklin Gothic Medium"><h5 class="fw-bolder">'
                + book.title + '</h5 ></a >';

            if (book.category != null) {
                htmlString += '<div class="container"><span class="h6 font-weight-bold">Cate: </span>';
                htmlString += '<a href="/cat/listbycate/?cateId="' +
                    book.category.id + '" class="text-decoration-none btn btn-sm btn-outline-warning">' + book.category.name + '</a></div>';
            }

            htmlString += '<span class="text-success">$' + book.price + '</span></div></div >';
            htmlString += '<div class="card-footer p-4 pt-0 border-top-0 bg-transparent"><div class="col-12 justify-content-center align-items-center text-center">';
            htmlString += '<a asp-page="/shop/cart" asp-page-handler="BuyNow" asp-route-id="' + book.id + '" class="btn btn-outline-primary">Add To <i class="fas fa-cart-plus"></i></a>';
            htmlString += '</div></div ></div ></div >';
        }

        dynamicElement.innerHTML = htmlString;
    }

    function renderHTMLTags(data) {
        let htmlString = "<form id='myTagsForm' method='post'>"
        htmlString +="<div class='form-group border rounded mb-5'>";
        for (var i = 0; i < data.length; i++) {
            let tag = data[i];
            htmlString += "<div class='form-check m-1'>";
            htmlString += "<input type='checkbox' name='CheckedTagsId' class='mx-2' value='" + tag.id + "'>";
            htmlString += "<label class='form-check-label'>" + tag.tagName + "</label>";
            htmlString += "</div>"
        }
        htmlString += "</div>"
        htmlString += "</form>"
        $("#tagsOfCate").empty();
        $("#tagsOfCate").append(htmlString)
    }

    requestBooksOfSelectedTags = (checkbox,categoryId) => {
        //submit để lưu id các tag vào CheckedTagsId
        let checkedTagsId = [];
        if (checkbox.checked) {
            //javascript và jquery dễ bị conflict
            //element của javascript khoogn gội được phương thức của jquery
            checkbox.classList.add("checked");
        }
        else {
            checkbox.classList.remove("checked");
        }

        let checkboxes = document.querySelectorAll("input.checked");
        //nếu có checkbox được check thì lọc theo tag và cate còn nếu không thì chỉ lọc theo cate
        //viêt như thế này là đủ đề handler không bao giờ nhận tham số null
        //thay vì phải hi sinh readability để có certainty
        if (checkboxes.length > 0) {
            checkboxes.forEach(function (node) {
                //console.log(node.defaultValue);
                checkedTagsId.push(parseInt(node.defaultValue));
            });
            checkedTagsIdStr = checkedTagsId.join(",");

            $.get("?handler=BooksOfTagsAndCate&CategoryId=" + categoryId + "&checkedTagsIdStr=" + checkedTagsIdStr, function (responseTxt) {
                console.log(responseTxt);
                renderHTMLProducts(responseTxt);
            });
        }
        else {
            $.get("?handler=FilterByCate&CategoryId=" + categoryId, function (responseTxt) {
                renderHTMLProducts(responseTxt);
            });
        }
    }
      
    $("#SelectedCategoryId").on({
        "change": function () {
            var categoryId = $(this).val();
            //Hiển thị các product theo category đã chọn
            $.get("?handler=FilterByCate&CategoryId=" + categoryId, function (responseTxt) {
                renderHTMLProducts(responseTxt);
            });

            //Hiển thị checkboxes của các tag có cate vừa chọn
            $.get("?handler=TagsByCate&CategoryId=" + categoryId, function (responseTxt) {
                renderHTMLTags(responseTxt);
            });
        },
        "mouseleave": function () {
            var categoryId = $(this).val();
            //Nếu tích vào ô checkbox nào thì sẽ gọi AJAX để trả về các book thỏa có tag là các tag được tích và có cate là cate đã chọn
            $("input").change(function () {
                requestBooksOfSelectedTags(this, categoryId);
            });

        }
    });

</script>
    
}